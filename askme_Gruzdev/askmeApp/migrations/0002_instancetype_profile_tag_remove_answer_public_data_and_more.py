# Generated by Django 4.2.1 on 2023-11-20 13:04

import askmeApp.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('askmeApp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InstanceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(2)])),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True)),
                ('avatar', models.ImageField(blank=True, default='no_avatar.jpg', null=True, upload_to=askmeApp.models.get_upload_path)),
                ('age', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(110)])),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('profile_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='answer',
            name='public_data',
        ),
        migrations.RemoveField(
            model_name='question',
            name='answer',
        ),
        migrations.RemoveField(
            model_name='question',
            name='public_data',
        ),
        migrations.AddField(
            model_name='answer',
            name='public_date',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='answer',
            name='question',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='askmeApp.question'),
        ),
        migrations.AddField(
            model_name='question',
            name='public_date',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AlterField(
            model_name='answer',
            name='title',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='question',
            name='title',
            field=models.CharField(max_length=255),
        ),
        migrations.CreateModel(
            name='Repost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_id', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(2)])),
                ('public_date', models.DateTimeField(auto_now=True)),
                ('repost_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='askmeApp.instancetype')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='askmeApp.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_id', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(2)])),
                ('public_date', models.DateTimeField(auto_now=True)),
                ('like_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='askmeApp.instancetype')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='askmeApp.profile')),
            ],
        ),
        migrations.AddField(
            model_name='instancetype',
            name='answer',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='askmeApp.answer'),
        ),
        migrations.AddField(
            model_name='instancetype',
            name='question',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='askmeApp.question'),
        ),
        migrations.AddField(
            model_name='answer',
            name='tags',
            field=models.ManyToManyField(related_name='answers', to='askmeApp.tag'),
        ),
        migrations.AddField(
            model_name='answer',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='askmeApp.profile'),
        ),
        migrations.AddField(
            model_name='question',
            name='tags',
            field=models.ManyToManyField(related_name='questions', to='askmeApp.tag'),
        ),
        migrations.AddField(
            model_name='question',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='askmeApp.profile'),
        ),
    ]
